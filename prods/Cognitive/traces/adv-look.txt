[] : (look) : ()
[look] : (append (describe-location *location* *nodes*) (describe-paths *location* *edges*) (describe-objects *location* *objects* *object-locations*)) : ()
-- [describe-location] : (cadr (assoc location nodes)) : ((nodes (living-room (you are in the living-room. a wizard is snoring loudly on the couch.)) (garden (you are in a beautiful garden. there is a well in front of you.)) (attic (you are in the attic. there is a giant welding torch in the corner.))) (location . living-room))
-- [describe-paths] : (apply append (map describe-path (cdr (assoc location edges)))) : ((edges (living-room (garden west door) (attic upstairs ladder)) (garden (living-room east door)) (attic (living-room downstairs ladder))) (location . living-room))
-- -- -- [describe-path] : ({list} 'there 'is 'a (caddr edge) 'going (cadr edge) 'from 'here.) : ((edge garden west door))
-- -- -- -- [describe-path] : 'there : ((edge garden west door))
-- -- -- -- [describe-path] : 'is : ((edge garden west door))
-- -- -- -- [describe-path] : 'a : ((edge garden west door))
-- -- -- -- [describe-path] : 'going : ((edge garden west door))
-- -- -- -- [describe-path] : 'from : ((edge garden west door))
-- -- -- -- [describe-path] : 'here. : ((edge garden west door))
-- -- -- [describe-path] : ({list} 'there 'is 'a (caddr edge) 'going (cadr edge) 'from 'here.) : ((edge attic upstairs ladder))
-- -- -- -- [describe-path] : 'there : ((edge attic upstairs ladder))
-- -- -- -- [describe-path] : 'is : ((edge attic upstairs ladder))
-- -- -- -- [describe-path] : 'a : ((edge attic upstairs ladder))
-- -- -- -- [describe-path] : 'going : ((edge attic upstairs ladder))
-- -- -- -- [describe-path] : 'from : ((edge attic upstairs ladder))
-- -- -- -- [describe-path] : 'here. : ((edge attic upstairs ladder))
-- -- [describe-objects] : (define (describe-obj obj) ({list} 'you 'see 'a obj 'on 'the 'floor.)) : ((loc . living-room) (objs whiskey bucket frog chain) (obj-loc (whiskey living-room) (bucket living-room) (chain garden) (frog garden)))
-- [describe-objects] : (apply append (map describe-obj (objects-at loc objs obj-loc))) : ((loc . living-room) (objs whiskey bucket frog chain) (obj-loc (whiskey living-room) (bucket living-room) (chain garden) (frog garden)) (describe-obj . describe-obj))
-- -- -- -- [objects-at] : (define (is-at obj) (eq? (cadr (assoc obj obj-loc)) loc)) : ((loc . living-room) (objs whiskey bucket frog chain) (obj-loc (whiskey living-room) (bucket living-room) (chain garden) (frog garden)))
-- -- -- [objects-at] : (remove-if-not is-at objs) : ((loc . living-room) (objs whiskey bucket frog chain) (obj-loc (whiskey living-room) (bucket living-room) (chain garden) (frog garden)) (is-at . is-at))
-- -- -- [remove-if-not] : (map (lambda (x) (if (not (func x)) (values) x)) lst) : ((lst whiskey bucket frog chain) (func . is-at))
-- -- -- -- [remove-if-not] : (lambda (x) (if (not (func x)) (values) x)) : ((lst whiskey bucket frog chain) (func . is-at))
-- -- -- -- [] : (if (not (func x)) (values) x) : ((x . whiskey))
-- -- -- -- -- [] : (not (func x)) : ((x . whiskey))
-- -- -- -- -- -- [is-at] : (eq? (cadr (assoc obj obj-loc)) loc) : ((obj . whiskey))
-- -- -- -- [] : (if (not (func x)) (values) x) : ((x . bucket))
-- -- -- -- -- -- [is-at] : (eq? (cadr (assoc obj obj-loc)) loc) : ((obj . bucket))
-- -- -- -- [] : (if (not (func x)) (values) x) : ((x . frog))
-- -- -- -- -- -- [is-at] : (eq? (cadr (assoc obj obj-loc)) loc) : ((obj . frog))
-- -- -- -- [] : (values) : ((x . frog))
-- -- -- -- [] : (if (not (func x)) (values) x) : ((x . chain))
-- -- -- -- -- -- [is-at] : (eq? (cadr (assoc obj obj-loc)) loc) : ((obj . chain))
-- -- -- -- [] : (values) : ((x . chain))
-- -- -- [describe-obj] : ({list} 'you 'see 'a obj 'on 'the 'floor.) : ((obj . whiskey))
-- -- -- -- [describe-obj] : 'you : ((obj . whiskey))
-- -- -- -- [describe-obj] : 'see : ((obj . whiskey))
-- -- -- -- [describe-obj] : 'a : ((obj . whiskey))
-- -- -- -- [describe-obj] : 'on : ((obj . whiskey))
-- -- -- -- [describe-obj] : 'the : ((obj . whiskey))
-- -- -- -- [describe-obj] : 'floor. : ((obj . whiskey))
-- -- -- [describe-obj] : ({list} 'you 'see 'a obj 'on 'the 'floor.) : ((obj . bucket))
-- -- -- -- [describe-obj] : 'you : ((obj . bucket))
-- -- -- -- [describe-obj] : 'see : ((obj . bucket))
-- -- -- -- [describe-obj] : 'a : ((obj . bucket))
-- -- -- -- [describe-obj] : 'on : ((obj . bucket))
-- -- -- -- [describe-obj] : 'the : ((obj . bucket))
-- -- -- -- [describe-obj] : 'floor. : ((obj . bucket))
